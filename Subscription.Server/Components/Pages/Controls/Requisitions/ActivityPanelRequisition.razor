<div class="activityContainerBox" style="height: 450px">
    <div>
        <div>
            <SfGrid AllowPaging="false" DataSource="Model" EnableHover="true" EnableStickyHeader="true" Height="410px" ID="gridActivity" @ref="GridActivity" RowHeight="@RowHeight" TValue="CandidateActivity"
                    Width="100%">
                <GridSelectionSettings EnableToggle="false" Mode="SelectionMode.Row" Type="SelectionType.Single" />
                <GridEvents DataBound="GridBound" RowSelected="RowSelected" TValue="CandidateActivity" />
                <GridColumns>
                    <GridColumn Field="@nameof(CandidateActivity.Requisition)" HeaderText="Candidate" Width="40%"></GridColumn>
                    <GridColumn Field="@nameof(CandidateActivity.ID)" HeaderText="ID" IsPrimaryKey="true" Visible="false" Width="0"></GridColumn>
                    <GridColumn HeaderText="Status" Width="20%">
                        <Template Context="aCon">
                            @{
                                if (aCon is CandidateActivity _con)
                                {
                                    <span>@($"{_con.Status} [{_con.UpdatedBy.ToUpper()}]")</span>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Date Updated" Width="15%">
                        <Template Context="aCon">
                            @{
                                if (aCon is CandidateActivity _con)
                                {
                                    <span>@_con.UpdatedDate.CultureDate()</span>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Initial Recruiter" Width="15%">
                        <Template Context="aCon">
                            @{
                                if (aCon is CandidateActivity _con)
                                {
                                    <span>@($"{_con.CandidateUpdatedBy.ToUpper()}")</span>
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn Width="10%">
                        <Template Context="bCon">
                            @{
                                if (bCon is CandidateActivity _con)
                                {
                                    <div class="buttonContain">
                                        @{
                                            if (_con.DoRoleHaveRight)
                                            {
                                                <SfButton Content="" IconCss="e-icons e-edit" @onclick="() => EditActivityDialog(_con.ID)"/>
                                            }

                                            if (_con.StatusCode != "PEN" && (_con.UpdatedBy.Trim().Equals(User.Trim(), StringComparison.OrdinalIgnoreCase) || RoleID == 1))
                                            {
                                                <SfButton Content="" IconCss="e-icons e-undo" @onclick="() => UndoActivity(_con.ID)" />
                                            }
                                        }
                                    </div>
                                }
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
                <GridTemplates Context="context">
                    <DetailTemplate>
                        @{
                            CandidateActivity _activity = context as CandidateActivity;
                        }

                        @if (_activity != null)
                        {
                            if (_activity.Notes.NullOrWhiteSpace())
                            {
                                <div class="blankActivityNotes">There are no Notes for this Activity.</div>
                            }
                            else
                            {
                                <div class="activityNotes">@_activity.Notes.ToMarkupString()</div>
                            }
                        }
                    </DetailTemplate>
                </GridTemplates>
            </SfGrid>
        </div>
    </div>
</div>
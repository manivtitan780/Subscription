<div>
	<SfGrid AllowPaging="false" DataSource="@Model" EnableHover="true" Height="410px" ID="gridNotes" @ref="GridNotes" RowHeight="@RowHeight" SelectedRowIndex="0" TValue="CandidateNotes" Width="100%">
		<GridSelectionSettings EnableToggle="false" Mode="SelectionMode.Row" Type="SelectionType.Single"/>
		<GridEvents RowSelected="RowSelected" TValue="CandidateNotes"/>
		<GridColumns>
			<GridColumn Field="@nameof(CandidateNotes.Notes)" HeaderText="Notes" Width="75%">
				<Template Context="aCon">
					@{
						// Memory optimization: Direct casting instead of pattern matching
						CandidateNotes note = (CandidateNotes)aCon;
					}
					<span title="@GetCleanNotesText(note.Notes)" style="line-height: 1.5">
						@note.Notes.ToMarkupString()
					</span>
				</Template>
			</GridColumn>
			<GridColumn Field="@nameof(CandidateNotes.ID)" HeaderText="ID" IsPrimaryKey="true" Visible="false"/>
			<GridColumn HeaderText="Updated" Width="15%">
				<Template Context="aCon">
					@*@{
						// Memory optimization: Direct casting instead of pattern matching
						var note = (CandidateNotes)aCon;
					}*@
					<span>@GetFormattedUpdateInfo((CandidateNotes)aCon)</span>
				</Template>
			</GridColumn>
			<GridColumn Width="10%">
				<Template Context="bCon">
					@{
						// Memory optimization: Direct casting instead of pattern matching
						CandidateNotes note = (CandidateNotes)bCon;
					}
					@if (note.UpdatedBy == UserName && EditRights)
					{
						<div class="buttonContain">
							<SfButton Content="" title="Edit" IconCss="e-icons e-edit" @onclick="() => EditNotesDialog(note.ID)"/>
							<SfButton Content="" title="Disable" IconCss="e-icons e-delete" @onclick="() => DeleteNotesMethod(note.ID)"/>
						</div>
					}
				</Template>
			</GridColumn>
		</GridColumns>
	</SfGrid>
</div>
<div class="companyPanel">
		<SfGrid AllowPaging="false" DataSource="@Model" EnableHover="true" ID="gridCompanyTab" @ref="Grid" RowHeight="@RowHeight" SelectedRowIndex="0" TValue="CompanyDocuments" Width="100%">
			<GridSelectionSettings EnableToggle="false" Mode="SelectionMode.Row" Type="SelectionType.Single" />
			<GridEvents RowSelected="RowSelected" TValue="CompanyDocuments" />
			<GridColumns>
				<GridColumn Field="@nameof(CompanyDocuments.DocumentName)" HeaderText="Name" Width="20%">
				</GridColumn>
				<GridColumn Field="@nameof(CompanyDocuments.ID)" HeaderText="ID" IsPrimaryKey="true" Visible="false" />
				<GridColumn Field="@nameof(CompanyDocuments.FileName)" HeaderText="File Name" Width="20%" />
				<GridColumn Field="@nameof(CompanyDocuments.UpdatedBy)" HeaderText="Updated By" Width="20%">
					<Template Context="bCon">
						@{
							if (bCon is CompanyDocuments _con)
							{
								<span>@($"{_con.UpdatedDate.CultureDate()} [{_con.UpdatedBy}]")</span>
							}
						}
					</Template>
				</GridColumn>
				<GridColumn Width="10%">
					<Template Context="bCon">
						@{
							if (bCon is CompanyDocuments _con)
							{
								<div class="buttonContain">
									<SfButton Content="" IconCss="e-icons e-open-link" @onclick="() => ViewDocumentDialog(_con)" title="View" />
									@if (CanAdministerDocuments)
									{
										<SfButton Content="" IconCss="e-icons e-download" @onclick="() => DownloadDocumentDialog(_con.ID)" title="Download"/>
										<SfButton Content="" IconCss="e-icons e-delete" @onclick="() => DeleteCompanyDocumentMethod(_con.ID)" title="Delete"/>
									}
								</div>
							}
						}
					</Template>
				</GridColumn>
			</GridColumns>
			<GridTemplates Context="context">
				<DetailTemplate>
					@if (context is CompanyDocuments _con)
					{
						if (_con.Notes.NullOrWhiteSpace())
						{
							<div class="gridNotes blankGridNotes">There are no Notes for this Location.</div>
						}
						else
						{
							<div class="gridNotes textGridNotes">@_con.Notes.Replace("\n", "<br/>").ToMarkupString()</div>
						}
					}
				</DetailTemplate>
			</GridTemplates>
		</SfGrid>
</div>
<SfSpinner @bind-Visible="@VisibleSpinner" CssClass="spinnerHeight" Type="SpinnerType.Fluent2" ZIndex="12000" />
<ViewPDFDocument DocumentLocation="@SelectedRow.FileName" DocumentName="@SelectedRow.DocumentName" EntityID="@SelectedRow.ID" InternalFileName="@SelectedRow.InternalFileName" @ref="@DocumentViewPDF"/>

USE Subscription
GO

TRUNCATE TABLE Subscription.dbo.CompanyLocations;

DISABLE TRIGGER ALL ON Subscription.dbo.CompanyLocations;

--SET IDENTITY_INSERT Subscription.dbo.CompanyLocations OFF

-- Insert Client (CLI) Addresses
INSERT INTO dbo.CompanyLocations (
    CompanyID, StreetName, City, StateID, ZipCode, CompanyEmail, Phone, Fax, Notes, IsPrimaryLocation, CreatedBy, CreatedDate, UpdatedBy, UpdatedDate
)
SELECT
    EA.ENTITY_ID AS CompanyID,EA.ADDRESS AS StreetName,EA.CITY,EA.STATE_ID,EA.ZIP_CODE,ECOMM.ECOMM AS CompanyEmail,COALESCE(PHONE.PHONE, '') AS Phone,COALESCE(FAX.PHONE, '') AS Fax,
    EA.NOTES,CASE WHEN EA.IS_PRIMARY = 'Y' THEN 1 ELSE 0 END AS IsPrimaryLocation,EA.CREATED_BY,EA.DATE_CREATED,EA.UPDATED_BY,EA.DATE_UPDATED
FROM 
	TitanPSS.dbo.ENTITY_ADDRESS EA LEFT JOIN TitanPSS.dbo.ENTITY_ECOMM ECOMM ON EA.ENTITY_ID = ECOMM.ENTITY_ID AND ECOMM.ENTITY_TYPE_CODE = 'CLI' AND ECOMM.ECOMM_TYPE_CODE = 'EMAIL'
	OUTER APPLY ( SELECT TOP 1 EP.PHONE FROM TitanPSS.dbo.ENTITY_PHONE EP WHERE EP.ENTITY_ID = EA.ENTITY_ID AND EP.ENTITY_TYPE_CODE = 'CLI' 
				AND EP.PHONE_TYPE_CODE IN ('WKPH', 'CELL', 'HMPH', 'OTPH') ORDER BY CASE EP.PHONE_TYPE_CODE WHEN 'WKPH' THEN 1 WHEN 'CELL' THEN 2 WHEN 'HMPH' THEN 3 
				WHEN 'OTPH' THEN 4 ELSE 5 END ) PHONE
	OUTER APPLY ( SELECT TOP 1 EP.PHONE FROM TitanPSS.dbo.ENTITY_PHONE EP WHERE EP.ENTITY_ID = EA.ENTITY_ID AND EP.ENTITY_TYPE_CODE = 'CLI' AND EP.PHONE_TYPE_CODE = 'FAX' ) FAX
WHERE 
	EA.ENTITY_TYPE_CODE = 'CLI';

-- Insert Contact (CNT) Addresses (mapped to client, skipping duplicates)
INSERT INTO dbo.CompanyLocations (
    CompanyID, StreetName, City, StateID, ZipCode, CompanyEmail, Phone, Fax, Notes, IsPrimaryLocation, CreatedBy, CreatedDate, UpdatedBy, UpdatedDate
)
SELECT
    CO.PARENT_ENTITY_ID AS CompanyID,EA.ADDRESS AS StreetName,EA.CITY,EA.STATE_ID,EA.ZIP_CODE,ECOMM.ECOMM AS CompanyEmail,COALESCE(PHONE.PHONE, '') AS Phone,COALESCE(FAX.PHONE, '') AS Fax,
    EA.NOTES,CASE WHEN EA.IS_PRIMARY = 'Y' THEN 1 ELSE 0 END AS IsPrimaryLocation,EA.CREATED_BY,EA.DATE_CREATED,EA.UPDATED_BY,EA.DATE_UPDATED
FROM 
	TitanPSS.dbo.ENTITY_ADDRESS EA JOIN TitanPSS.dbo.CONTACT CO ON EA.ENTITY_ID = CO.CONTACT_ID
	LEFT JOIN TitanPSS.dbo.ENTITY_ECOMM ECOMM ON EA.ENTITY_ID = ECOMM.ENTITY_ID AND ECOMM.ENTITY_TYPE_CODE = 'CNT' AND ECOMM.ECOMM_TYPE_CODE = 'EMAIL'
	OUTER APPLY (SELECT TOP 1 EP.PHONE FROM TitanPSS.dbo.ENTITY_PHONE EP WHERE EP.ENTITY_ID = EA.ENTITY_ID AND EP.ENTITY_TYPE_CODE = 'CNT' 
					AND EP.PHONE_TYPE_CODE IN ('WKPH', 'CELL', 'HMPH', 'OTPH')
				ORDER BY CASE EP.PHONE_TYPE_CODE WHEN 'WKPH' THEN 1 WHEN 'CELL' THEN 2 WHEN 'HMPH' THEN 3 WHEN 'OTPH' THEN 4 ELSE 5 END) PHONE
	OUTER APPLY (SELECT TOP 1 EP.PHONE FROM TitanPSS.dbo.ENTITY_PHONE EP WHERE EP.ENTITY_ID = EA.ENTITY_ID AND EP.ENTITY_TYPE_CODE = 'CNT' AND EP.PHONE_TYPE_CODE = 'FAX') FAX
WHERE 
	EA.ENTITY_TYPE_CODE = 'CNT'
	AND NOT EXISTS (SELECT 1 FROM dbo.CompanyLocations CL WHERE CL.CompanyID = CO.PARENT_ENTITY_ID AND CL.StreetName COLLATE Latin1_General_CI_AI = EA.ADDRESS COLLATE Latin1_General_CI_AI);


-- Step 1: Set all to non-primary (safe reset)
UPDATE dbo.CompanyLocations
SET IsPrimaryLocation = 0;

-- Step 2: Set the lowest ID per CompanyID as primary
WITH RankedLocations AS (
    SELECT ID,CompanyID,ROW_NUMBER() OVER (PARTITION BY CompanyID ORDER BY ID ASC) AS RowNum FROM dbo.CompanyLocations
)
UPDATE 
	CL 
SET 
	IsPrimaryLocation = 1
FROM 
	dbo.CompanyLocations CL JOIN RankedLocations R ON CL.ID = R.ID
WHERE 
	R.RowNum = 1;

DECLARE @Max int = 1;

SELECT
	@Max = MAX(ID)
FROM
	Subscription.dbo.CompanyLocations;

DBCC CHECKIDENT ('Subscription.dbo.CompanyLocations', RESEED, @Max);
